function a(){
	var i=0;

	function b(){
		alert(++i);
	}

	return b;
}

 var c = a();
 c();

这样在执行完var c=a()后，变量c实际上是指向了函数b，(return b)
再执行c()后就会弹出一个窗口显示i的值(第一次为1)。这段代码其实就创建了一个闭包，为什么？
因为函数a外的变量c引用了函数a内的函数b

通俗的讲：就是函数a的内部函数b，被函数a外部的一个变量引用的时候，就创建了一个闭包。



1、闭包是什么，有什么特性，对页面有什么影响？简要介绍你理解的闭包
	
	1.封闭性：外界无法访问闭包内部的数据，如果在闭包内声明变量，
	外界是无法访问的，除非闭包主动向外界提供访问接口；

	2.持久性：一般的函数，调用完毕之后，系统自动注销函数，而对于闭包来说，
	在外部函数被调用之后，闭包结构依然保存在系统中，闭包中的数据依然存在，
	从而实现对数据的持久使用。

优点：

① 减少全局变量。

② 减少传递函数的参数量

③ 封装；

缺点：
 使用闭包会占有内存资源，过多的使用闭包会导致内存溢出等.
